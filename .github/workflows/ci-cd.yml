# Copyright Jiaqi Liu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: Template CI/CD

"on":
  pull_request:
  push:
    branches:
      - master
      - jpa-elide

env:
  JDK_VERSION: 17
  JDK_DISTRIBUTION: 'adopt'
  USER: QubitPi
  EMAIL: jack20220723@gmail.com
  MODEL_PACKAGE_NAME: 'io.github.qubitpi.ws.jersey.template.models'

jobs:
  yml-md-style-and-link-checks:
    uses: QubitPi/hashicorp-aws/.github/workflows/yml-md-style-and-link-checks.yml@master

  tests:
    name: Unit & Integration Tests
    needs: yml-md-style-and-link-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test environment setup
        uses: ./.github/actions/ci-setup
        with:
          data-models-repo-org: QubitPi
          data-models-repo-name: jersey-webservice-template-jpa-data-models
      - name: Set up Docker for Integration Tests
        uses: docker-practice/actions-setup-docker@master
      - name: Run unit & integration tests
        run: mvn -B clean verify

  documentation:
    name: Test & Release Documentation (including Javadoc)
    needs: tests
    outputs:
      outcome: ${{ job.status }}
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Test environment setup
        uses: ./.github/actions/ci-setup
        with:
          data-models-repo-org: QubitPi
          data-models-repo-name: jersey-webservice-template-jpa-data-models
      - name: Install dependencies
        working-directory: docs
        run: yarn
      - name: Build documentations
        working-directory: docs
        run: yarn build
      - name: Generate Javadoc
        run: mvn -B clean javadoc:javadoc
      - name: Move Javadoc into documentation directory
        if: github.ref == 'refs/heads/master'
        run: mv target/site/apidocs/ docs/build/apidocs/
      - name: Deploy documentation (including Javadoc) to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build
          enable_jekyll: false
          user_name: ${{ env.USER }}
          user_email: ${{ env.EMAIL }}

  slack-notification-pr:
    name: Send Slack Notification
    if: ${{ (github.event_name == 'pull_request') && always() }}
    needs: documentation
    uses: QubitPi/hashicorp-aws/.github/workflows/slack-notification.yml@master
    with:
      job-status: ${{ needs.documentation.outputs.outcome }}
    secrets:
      slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}

  triggering:
    name: Triggering data model CI/CD
    needs: documentation
    if: github.ref == 'refs/heads/jpa-elide'
    outputs:
      outcome: ${{ job.status }}
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Trigger data model CI/CD
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.JWT_DOWNSTREAM_CICD_TRIGGER_TOKEN }}
          repository: QubitPi/jersey-webservice-template-jpa-data-models
          event-type: jersey-webservice-template-jpa-elide-changes

  slack-notification-jpa-elide-branch-commit:
    name: Send Slack Notification
    if: ${{ (github.ref == 'refs/heads/jpa-elide') && always() }}
    needs: triggering
    uses: QubitPi/hashicorp-aws/.github/workflows/slack-notification.yml@master
    with:
      job-status: ${{ needs.triggering.outputs.outcome }}
    secrets:
      slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
