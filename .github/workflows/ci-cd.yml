# Copyright Jiaqi Liu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: Template CI/CD

"on":
  pull_request:
  push:
    branches:
      - master
      - jpa-elide

env:
  JDK_VERSION: 17
  JDK_DISTRIBUTION: 'adopt'
  USER: QubitPi
  EMAIL: jack20220723@gmail.com
  MODEL_PACKAGE_NAME: 'com.qubitpi.ws.jersey.template.models'

jobs:
  yaml-lint:
    name: YAML Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actionshub/yamllint@main
  markdown-lint:
    name: Markdown Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actionshub/markdownlint@main
  markdown-link-check:
    name: Markdown Link Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-verbose-mode: "yes"

  tests:
    name: Unit & Integration Tests
    needs: [yaml-lint, markdown-lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Environment setup
        uses: ./.github/actions/setup
        with:
          runbooks-repo-token: ""
          data-models-repo-token: ""
          data-models-repo-org: QubitPi
          data-models-repo-name: jersey-webservice-template-jpa-data-model
      - name: Generate Maven settings.xml
        uses: ./.github/actions/create-mvn-settings
        with:
          data-model-package-jar-group-id: com.qubitpi
          data-model-package-jar-artifact-id: jersey-webservice-template-jpa-data-model
          data-model-package-jar-version: 1.0.0
          data-model-server-id: N/A
          data-model-server-user: N/A
          data-model-server-token: N/A
          data-model-package-repo-id: N/A
          data-model-package-repo-url: N/A
      - name: Set up Docker for Integration Tests
        uses: docker-practice/actions-setup-docker@master
      - name: Run unit & integration tests
        run: mvn -B clean verify
      - name: Sonar Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B -Pcoverage sonar:sonar org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.java.binaries=target/classes -Dsonar.projectKey=QubitPi_jersey-webservice-template

  documentation:
    name: Test & Release Documentation (including Javadoc)
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Environment setup
        uses: ./.github/actions/setup
        with:
          runbooks-repo-token: ""
          data-models-repo-token: ""
          data-models-repo-org: QubitPi
          data-models-repo-name: jersey-webservice-template-jpa-data-model
      - name: Generate Maven settings.xml
        uses: ./.github/actions/create-mvn-settings
        with:
          data-model-package-jar-group-id: com.qubitpi
          data-model-package-jar-artifact-id: jersey-webservice-template-jpa-data-model
          data-model-package-jar-version: 1.0.0
          data-model-server-id: N/A
          data-model-server-user: N/A
          data-model-server-token: N/A
          data-model-package-repo-id: N/A
          data-model-package-repo-url: N/A
      - name: Install dependencies
        working-directory: docs
        run: npm install
      - name: Build documentations
        working-directory: docs
        run: npm run build
      - name: Generate Javadoc
        run: mvn -B clean javadoc:javadoc
      - name: Move Javadoc into documentation directory
        if: github.ref == 'refs/heads/master'
        run: mv target/site/apidocs/ docs/build/apidocs/
      - name: Deploy documentation (including Javadoc) to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build
          enable_jekyll: false
          user_name: ${{ env.USER }}
          user_email: ${{ env.EMAIL }}

  hashicorp:
    name: Generated Webservice WAR in GitHub Action, and Publish Template AMI Image and Deploy it to EC2 through HashiCorp
    if: ${{ github.event.repository.name != 'jersey-webservice-template' }}
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Environment setup
        uses: ./.github/actions/setup
        with:
          runbooks-repo-token: ${{ secrets.RUNBOOKS_REPO_TOKEN }}
          data-models-repo-token: ${{ secrets.DATA_MODELS_PRIVATE_REPO_TOKEN }}
          data-models-repo-org: private-data-model-repo-org
          data-models-repo-name: private-data-model-repo-name
      - name: Generate webservice WAR file
        run: mvn -B clean package
      - name: Move WAR file to a location for HashiCorp deployment to pickup
        run: |
          mkdir ../WAR
          mv target/my-webservice-1.0-SNAPSHOT.war ../WAR
      - name: QubitPi/hashicorp-aws
        uses: QubitPi/hashicorp-aws@master
        with:
          hashicorp-dir: ../hashicorp-aws/hashicorp/webservice
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
