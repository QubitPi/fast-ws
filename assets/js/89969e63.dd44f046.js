"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[215],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,b=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(b,o(o({ref:t},l),{},{components:r})):n.createElement(b,o({ref:t},l))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7684:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:8,title:"CI/CD"},o=void 0,s={unversionedId:"ci-cd",id:"ci-cd",title:"CI/CD",description:"Jersey Webservice Template supports",source:"@site/docs/ci-cd.md",sourceDirName:".",slug:"/ci-cd",permalink:"/jersey-webservice-template/docs/ci-cd",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ci-cd.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"CI/CD"},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/jersey-webservice-template/docs/configuration"},next:{title:"Setting Up Sentry.io",permalink:"/jersey-webservice-template/docs/sentry"}},c={},p=[{value:"JPA through Elide",id:"jpa-through-elide",level:3}],l={toc:p},u="wrapper";function d(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,n.Z)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Jersey Webservice Template supports\n",(0,a.kt)("a",{parentName:"p",href:"https://qubitpi.github.io/hashicorp-aws/docs/webservice"},"automatically deploying to AWS through HashiCorp")),(0,a.kt)("p",null,"In addition, the following ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/security-guides/encrypted-secrets"},"GitHub Secrets")," needs to be defined"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://sonarcloud.io/project/overview?id=QubitPi_jersey-webservice-template"},(0,a.kt)("strong",{parentName:"a"},"SONAR_TOKEN")))),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Error loading ci-cd.png",src:r(99).Z,width:"3664",height:"1764"})),(0,a.kt)("h3",{id:"jpa-through-elide"},"JPA through Elide"),(0,a.kt)("p",null,"Note that if model package is from an internal Maven repo which requires authentication, we can insert a ",(0,a.kt)("em",{parentName:"p"},"settings.xml"),"\ngenerating step using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/QubitPi/jersey-webservice-template/blob/jpa-elide/.github/actions/create-mvn-settings/action.yml"},"create-mvn-settings"),". For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"  hashicorp:\n    name: Generated Webservice WAR in GitHub Action, and Publish Template AMI Image and Deploy it to EC2 through HashiCorp\n    needs: tests\n    runs-on: ubuntu-latest\n    steps:\n      ...\n\n      - name: Generate Maven settings.xml\n        uses: ./.github/actions/create-mvn-settings\n        with:\n          internal-maven-repo-server-id: ${{ secrets.INTERNAL_MAVEN_REPO_SERVER_ID }}\n          internal-maven-repo-user: ${{ secrets.INTERNAL_MAVEN_REPO_USER }}\n          internal-maven-repo-token: ${{ secrets.INTERNAL_MAVEN_REPO_TOKEN }}\n          jersey-webservice-template-model-package-jar-group-id: ${{ secrets.JWT_MODEL_PACKAGE_JAR_GROUP_ID }}\n          jersey-webservice-template-model-package-jar-artifact-id: ${{ secrets.JWT_MODEL_PACKAGE_JAR_ARTIFACT_ID }}\n          jersey-webservice-template-model-package-jar-version: ${{ secrets.JWT_MODEL_PACKAGE_JAR_VERSION }}\n          jersey-webservice-template-model-package-repo-id: ${{ secrets.JWT_MODEL_PACKAGE_REPO_ID }}\n          jersey-webservice-template-model-package-repo-url: ${{ secrets.JWT_MODEL_PACKAGE_REPO_URL }}\n      ...\n")))}d.isMDXComponent=!0},99:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/ci-cd-25cd2b0f30cee77d36e7a77bc2d45db7.png"}}]);