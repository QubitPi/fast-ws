"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[765],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},v=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(t),v=a,g=c["".concat(s,".").concat(v)]||c[v]||m[v]||i;return t?r.createElement(g,o(o({ref:n},u),{},{components:t})):r.createElement(g,o({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=v;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}v.displayName="MDXCreateElement"},2041:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const i={slug:"env-var-in-pom",title:"Refer to Environment Variables in POM",authors:"jiaqi",tags:["Java","Maven"]},o=void 0,l={permalink:"/jersey-webservice-template/blog/env-var-in-pom",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-08-23-env-var-in-pom.md",source:"@site/blog/2019-08-23-env-var-in-pom.md",title:"Refer to Environment Variables in POM",description:"Environment Variables",date:"2019-08-23T00:00:00.000Z",formattedDate:"August 23, 2019",tags:[{label:"Java",permalink:"/jersey-webservice-template/blog/tags/java"},{label:"Maven",permalink:"/jersey-webservice-template/blog/tags/maven"}],readingTime:.895,hasTruncateMarker:!1,authors:[{name:"Jack",title:"Maintainer of Jersey Webservice Template",url:"https://github.com/QubitPi",imageURL:"https://avatars.githubusercontent.com/u/16126939?v=4",key:"jiaqi"}],frontMatter:{slug:"env-var-in-pom",title:"Refer to Environment Variables in POM",authors:"jiaqi",tags:["Java","Maven"]},nextItem:{title:"Java System Properties & Environment Variables API's",permalink:"/jersey-webservice-template/blog/java-env-properties"}},s={authorsImageUrls:[void 0]},p=[{value:"Environment Variables",id:"environment-variables",level:2}],u={toc:p},c="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"environment-variables"},"Environment Variables"),(0,a.kt)("p",null,"To refer to environment variables from the pom.xml, we can use the ",(0,a.kt)("strong",{parentName:"p"},"${env.VARIABLE_NAME}")," syntax."),(0,a.kt)("p",null,"For instance, let's use it to externalize the Java version in the build process:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<build>\n    <plugins>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>3.8.1</version>\n            <configuration>\n                <source>${env.JAVA_VERSION}</source>\n                <target>${env.JAVA_VERSION}</target>\n            </configuration>\n        </plugin>\n    </plugins>\n</build>\n")),(0,a.kt)("p",null,"We should remember to pass the Java version information via environment variables. If we fail to do so, then we won't be\nable to build the project."),(0,a.kt)("p",null,"To run the Maven goals or phases against such a build file, we should first export the environment variable. For\ninstance"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export JAVA_VERSION=17\nmvn clean package\n")),(0,a.kt)("p",null,"In order to provide a default when the ",(0,a.kt)("inlineCode",{parentName:"p"},"JAVA_VERSION")," environment variable is missing we can use a Maven profile:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<profiles>\n    <profile>\n        <id>default-java</id>\n        <activation>\n            <property>\n                <name>!env.JAVA_VERSION</name>\n            </property>\n        </activation>\n        <build>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.8.1</version>\n                    <configuration>\n                        <source>1.8</source>\n                        <target>1.8</target>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </build>\n    </profile>\n</profiles>\n")),(0,a.kt)("p",null,"As shown above, we're creating a profile and making it active only if the ",(0,a.kt)("inlineCode",{parentName:"p"},"JAVA_VERSION")," environment variable is missing\n(",(0,a.kt)("inlineCode",{parentName:"p"},"!env.JAVA_VERSION")," part). If that happens, then this new plugin definition will override the existing one."))}m.isMDXComponent=!0}}]);